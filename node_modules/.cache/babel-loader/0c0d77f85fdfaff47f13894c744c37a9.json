{"ast":null,"code":"var _jsxFileName = \"/Users/octaviandavid/Projects/react_project/movie-selector/react-movies/movie-search/src/App.js\";\n\n/** @format */\nimport React from \"react\";\nimport \"./App.css\"; // import fetchMovie from \"./components/api\";\n\nimport Loading from \"./components/loading\";\nimport MovieList from \"./movie-info\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMovie: \"avengers\",\n      loading: true,\n      allMovies: []\n    }; // this.getData = this.getData.bind(this);\n  }\n\n  componentDidMount() {} // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.activeMovie !== this.state.activeMovie) {\n  //     this.getData(this.state.activeMovie);\n  //   }\n  // }\n  // getData(movie) {\n  //   this.setState({\n  //     loading: true\n  //   });\n  //   this.fetchMovie(movie).then(data => {\n  //     this.setState({\n  //       allMovies: data,\n  //       loading: false\n  //     });\n  //   });\n  // }\n\n\n  handleChangeMovie(newMovie) {\n    this.setState({\n      activeMovie: newMovie\n    });\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.loading === true) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"// \", React.createElement(MovieList, {\n      movies: this.state.allMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/octaviandavid/Projects/react_project/movie-selector/react-movies/movie-search/src/App.js"],"names":["React","Loading","MovieList","App","Component","constructor","props","state","activeMovie","loading","allMovies","componentDidMount","handleChangeMovie","newMovie","setState","render","console","log"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,UADF;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb,CAHiB,CASjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG,CAAE,CAbU,CAehC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,CAACC,QAAD,EAAW;AAC1B,SAAKC,QAAL,CAAc;AACZN,MAAAA,WAAW,EAAEK;AADD,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;;AACA,QAAI,KAAKA,KAAL,CAAWE,OAAX,KAAuB,IAA3B,EAAiC;AAC/B,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACK,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CADF;AAKD;;AAlD+B;;AAqDlC,eAAeP,GAAf","sourcesContent":["/** @format */\nimport React from \"react\";\nimport \"./App.css\";\n// import fetchMovie from \"./components/api\";\nimport Loading from \"./components/loading\";\nimport MovieList from \"./movie-info\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeMovie: \"avengers\",\n      loading: true,\n      allMovies: []\n    };\n\n    // this.getData = this.getData.bind(this);\n  }\n\n  componentDidMount() {}\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.activeMovie !== this.state.activeMovie) {\n  //     this.getData(this.state.activeMovie);\n  //   }\n  // }\n\n  // getData(movie) {\n  //   this.setState({\n  //     loading: true\n  //   });\n\n  //   this.fetchMovie(movie).then(data => {\n  //     this.setState({\n  //       allMovies: data,\n  //       loading: false\n  //     });\n  //   });\n  // }\n\n  handleChangeMovie(newMovie) {\n    this.setState({\n      activeMovie: newMovie\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    if (this.state.loading === true) {\n      return <Loading />;\n    }\n    return (\n      <div>\n        // <MovieList movies={this.state.allMovies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}